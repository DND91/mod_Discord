package net.minecraft.src;

public class GenLayerDimensionBorderBiome extends GenLayer
{
    private WorldProviderBase worldProvider;

    public GenLayerDimensionBorderBiome(long l, GenLayer genlayer, WorldProviderBase worldproviderbase)
    {
        super(l);
        parent = genlayer;
        worldProvider = worldproviderbase;
    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int i, int j, int k, int l)
    {
        int ai[] = parent.getInts(i - 1, j - 1, k + 2, l + 2);
        int ai1[] = IntCache.getIntCache(k * l);

        for (int i1 = 0; i1 < l; i1++)
        {
            for (int j1 = 0; j1 < k; j1++)
            {
                initChunkSeed(j1 + i, i1 + j);
                int k1 = ai[j1 + 1 + (i1 + 1) * (k + 2)];
                int l1 = ai[j1 + 1 + ((i1 + 1) - 1) * (k + 2)];
                int i2 = ai[j1 + 1 + 1 + (i1 + 1) * (k + 2)];
                int j2 = ai[((j1 + 1) - 1) + (i1 + 1) * (k + 2)];
                int k2 = ai[j1 + 1 + (i1 + 1 + 1) * (k + 2)];
                BiomeGenBase biomegenbase = worldProvider.setBorderBiomes(BiomeGenBase.biomeList[k1], BiomeGenBase.biomeList[l1], this);
                BiomeGenBase biomegenbase1 = worldProvider.setBorderBiomes(BiomeGenBase.biomeList[k1], BiomeGenBase.biomeList[i2], this);
                BiomeGenBase biomegenbase2 = worldProvider.setBorderBiomes(BiomeGenBase.biomeList[k1], BiomeGenBase.biomeList[j2], this);
                BiomeGenBase biomegenbase3 = worldProvider.setBorderBiomes(BiomeGenBase.biomeList[k1], BiomeGenBase.biomeList[k2], this);

                if (biomegenbase != null)
                {
                    ai1[j1 + i1 * k] = biomegenbase.biomeID;
                    continue;
                }

                if (biomegenbase1 != null)
                {
                    ai1[j1 + i1 * k] = biomegenbase1.biomeID;
                    continue;
                }

                if (biomegenbase2 != null)
                {
                    ai1[j1 + i1 * k] = biomegenbase2.biomeID;
                    continue;
                }

                if (biomegenbase3 != null)
                {
                    ai1[j1 + i1 * k] = biomegenbase3.biomeID;
                }
                else
                {
                    ai1[j1 + i1 * k] = k1;
                }
            }
        }

        return ai1;
    }
}
